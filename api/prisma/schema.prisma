// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Moderators {
	id									Int								@id @default(autoincrement())
	email								String						@unique
	games								Games[]
	topics							Topics[]
	phrases							Phrases[]
	socketId						String?
}

model Teams {
  id                  Int               @id @default(autoincrement())
  teamName            String
  teamScore           Int
  game                Games             @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId              Int
	phrases							Phrases[]
	socketId						String?
}

model Topics {
  id                  Int               @id @default(autoincrement())
  name                String
  Phrase              Phrases[]
  game                Games             @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId              Int
	moderator					  Moderators				@relation(fields: [moderatorId], references: [id], onDelete: Cascade)
	moderatorId					Int
	round								Rounds?						
	roundId							Int?							@unique
}

model Phrases {
  id                  Int               @id @default(autoincrement())
  body                String
  wordCount           Int
  topic               Topics            @relation(fields: [topicId], references: [id], onDelete: Cascade)
  topicId             Int
	moderator					  Moderators				@relation(fields: [moderatorId], references: [id], onDelete: Cascade)
	moderatorId					Int
	team								Teams?						@relation(fields: [teamId], references: [id])
	teamId							Int?
}

model Games {
  id                  Int               @id @default(autoincrement())
	name								String						
  rounds              Int
  gameCode            String          	@unique  
	publishedAt 				DateTime?					
  Team                Teams[]
	Topic								Topics[]
	Rounds							Rounds[]
	moderator					  Moderators				@relation(fields: [moderatorId], references: [id], onDelete: Cascade)
	moderatorId					Int
}

model Rounds {
  id                  Int               @id @default(autoincrement())
	game								Games?						@relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId              Int
	topic								Topics						@relation(fields: [topicId], references: [id], onDelete: Cascade)
  topicId             Int								@unique
	Turns								Turns[]
	startedAt						DateTime?
}

model Turns {
  id                  Int               @id @default(autoincrement())
  performingTeamId    Int
  performingTeamScore Int
  guessingTeamId      Int
  guessingTeamScore   Int
	Round								Rounds?						@relation(fields: [roundId], references: [id])
  roundId             Int
  currentLineNumber   Int               @default(0)
}

model Haicues {
  id            Int                     @id @default(autoincrement())
  roundId       Int
  teamId        Int
  line1         String
  line2         String
  line3         String
  lineGuessed   Int?
  correctTeam   Int?
}

model Buzzers {
  id            Int                     @id @default(autoincrement())
  turnId        Int
  teamId        Int
  buzzAt        DateTime?
}
