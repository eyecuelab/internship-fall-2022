// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Moderators {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  Games    Games[]
  socketId String?
}

model Teams {
  id       Int       @id @default(autoincrement())
  name     String
  points   Int
  Game     Games     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId   Int
  Phrases  Phrases[]
  Turns    Turns[]
  Haicues  Haicues[]
  socketId String?
}

model Topics {
  id      Int       @id @default(autoincrement())
  name    String
  Phrases Phrases[]
  Game    Games     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId  Int
  Round   Rounds?
  roundId Int?      @unique
}

model Phrases {
  id        Int       @id @default(autoincrement())
  body      String
  wordCount Int
  Topic     Topics    @relation(fields: [topicId], references: [id], onDelete: Cascade)
  topicId   Int
  Team      Teams?    @relation(fields: [teamId], references: [id])
  teamId    Int?
  Haicues   Haicues[]
}

model Games {
  id          Int        @id @default(autoincrement())
  name        String
  gameCode    String     @unique
  publishedAt DateTime?
  Team        Teams[]
  Topic       Topics[]
  Rounds      Rounds[]
  Moderator   Moderators @relation(fields: [moderatorId], references: [id], onDelete: Cascade)
  moderatorId Int
}

model Rounds {
  id      Int       @id @default(autoincrement())
  Game    Games?    @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId  Int
  Topic   Topics    @relation(fields: [topicId], references: [id], onDelete: Cascade)
  topicId Int       @unique
  Turns   Turns[]
  Haicues Haicues[]
}

model Turns {
  id               Int     @id @default(autoincrement())
  performingTeam   Teams   @relation(fields: [performingTeamId], references: [id], onDelete: Cascade)
  performingTeamId Int
  Haicue           Haicues @relation(fields: [haicueId], references: [id], onDelete: Cascade)
  haicueId         Int     @unique
  Round            Rounds? @relation(fields: [roundId], references: [id], onDelete: Cascade)
  roundId          Int
}

model Haicues {
  id       Int     @id @default(autoincrement())
  Round    Rounds  @relation(fields: [roundId], references: [id], onDelete: Cascade)
  roundId  Int
  Phrase   Phrases @relation(fields: [phraseId], references: [id], onDelete: Cascade)
  phraseId Int
  Team     Teams   @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId   Int
  line1    String
  line2    String
  line3    String
  Turn     Turns?
  turnId   Int?
}

model Buzzers {
  id     Int @id @default(autoincrement())
  turnId Int
  teamId Int
}
